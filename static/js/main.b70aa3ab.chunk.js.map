{"version":3,"sources":["utils/reducers.js","utils/sagas.js","utils/store.js","utils/actions.js","components/SearchInput.js","components/PopupListView.js","components/hocs/clickOutsideHandler.js","components/PopupList.js","components/SearchBox.js","index.js"],"names":["initialState","inputRef","autocompletePlanets","searchInputValue","isFetching","isAutocompleteListOpen","watchFetchPlanets","watchInput","fetchPlanets","rootSaga","action","task","regenerator_default","a","wrap","_context","prev","next","take","sent","trim","fork","cancel","put","type","stop","_marked","_context2","_marked2","_loop","_ret","_context4","mark","url","isAnotherPageAvailable","data","_context3","abrupt","v","delay","concat","call","fetch","then","res","json","results","delegateYield","t0","t1","e","cancelled","finish","_marked3","_context5","all","_marked4","sagaMiddleware","createSagaMiddleware","createStore","state","arguments","length","undefined","Object","assign","update","$push","ref","option","applyMiddleware","logger","run","inputChange","SearchInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","handleInput","event","target","value","handleClick","inputClear","current","focus","React","createRef","active","pushAutocompleteRef","getBoundingClientRect","window","_this2","isTouched","react_default","createElement","className","id","onChange","onFocus","setState","onBlur","placeholder","htmlFor","onClick","Component","mapDispatchToProps","connect","PopupListView","planetList","map","item","key","slice","clickHandler","name","word","searchQuery","searchIndex","toLowerCase","indexOf","wordParts","first","second","third","Fragment","highlightResults","inputValue","ClickOutsideHandler","wrapperRef","useRef","handler","keyCodes","handleKeyPress","includes","keyCode","contains","useEffect","document","addEventListener","removeEventListener","useClickOutsideHandler","outsideClickLogic","style","children","PopupList","setInputText","text","setAutocompleteOption","ESCAPE_KEY_CODE","top","bottom","left","isOpen","width","popupOutsideClick","components_PopupListView","PureComponent","SearchBox","StrictMode","react","fallback","autoComplete","components_SearchInput","components_PopupList","ReactDOM","render","es","store","components_SearchBox","getElementById"],"mappings":"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","file":"static/js/main.b70aa3ab.chunk.js","sourcesContent":["//import { combineReducers } from \"redux\";\nimport update from 'immutability-helper';\n\nexport const initialState = {\n  inputRef: {},\n  autocompletePlanets: [],\n  searchInputValue: '',\n  isFetching: false,\n  isAutocompleteListOpen: false\n};\n\nexport function SearchBoxComponent(state = initialState, action) {\n  switch (action.type) {\n\n    case 'INPUT_CHANGED':\n      return Object.assign({}, state, {\n        searchInputValue: action.searchInputValue,\n        isFetching: true,\n        autocompletePlanets: [],\n      })\n\n    case 'INPUT_EMPTY':\n      return Object.assign({}, state, {\n        isFetching: false,\n      })\n\n    case 'INPUT_CLEARED':\n      return Object.assign({}, state, {\n        searchInputValue: '',\n      })\n\n    case 'POPUP_OUTSIDE_CLICKED':\n      return Object.assign({}, state, {\n        isAutocompleteListOpen: false,\n      })\n\n    case 'PLANETS_PAGE_FETCH_START':\n      return Object.assign({}, state, {\n        isAutocompleteListOpen: true,\n      })\n\n    case 'PLANETS_PAGE_FETCHED':\n      return Object.assign({}, state, {\n        autocompletePlanets: update(state.autocompletePlanets, {$push: action.autocompletePlanets})\n      })\n\n    case 'ALL_PLANETS_FETCHED':\n      return Object.assign({}, state, {\n        isFetching: false,\n        isAutocompleteListOpen: true\n      })\n\n    case 'PLANET_FETCH_ABORTED':\n      return Object.assign({}, state, {\n        isFetching: false,\n        autocompletePlanets: [],\n      })\n\n    case 'PLANET_FETCH_ERRORED':\n      return Object.assign({}, state, {\n        isFetching: false,\n        autocompletePlanets: ['Error'],\n      })\n\n    case 'INPUT_REF_CREATED':\n      return Object.assign({}, state, {\n        inputRef: action.ref,\n      })\n\n    case 'AUTOCOMPLETE_OPTION_CLICKED':\n      return Object.assign({}, state, {\n        searchInputValue: action.option,\n        autocompletePlanets: [],\n        isAutocompleteListOpen: false,\n      })\n      \n    default: \n      return state\n  }\n}\n\n","import { put, take, all, delay, fork, call, cancel, cancelled } from 'redux-saga/effects'\n\nfunction* watchFetchPlanets() {\n  while (true) {\n    const action = yield take('INPUT_CHANGED');\n    if (action.searchInputValue.trim()) {\n      const task = yield fork(fetchPlanets, action);\n      yield take(['INPUT_CLEARED', 'INPUT_CHANGE', 'POPUP_OUTSIDE_CLICKED']);\n      yield cancel(task);  \n    } else {\n      yield put({ type: 'INPUT_EMPTY' });\n    }\n  }\n}\n\nfunction* watchInput() {\n  while (true) {\n    const action = yield take('INPUT_CHANGE');\n    yield put({ type: 'INPUT_CHANGED', searchInputValue: action.searchInputValue });\n  }\n}\n\nfunction* fetchPlanets(action) {\n  try {\n    let isFetching = true\n    while (isFetching) {\n      // If input is empty\n      if (!action.searchInputValue) return\n\n      // Debouncing, this works fine, no need for for debounce saga effect\n      yield delay(400);\n\n      let url = `https://swapi.co/api/planets/?search=${action.searchInputValue.trim()}`,\n        isAnotherPageAvailable = true;\n\n      // Workaround due swapi lack of get /all planets endpoint\n      while (isAnotherPageAvailable) {\n        yield put({ type: 'PLANETS_PAGE_FETCH_START' })\n\n        const data = yield call(() => {\n          return fetch(url)\n            .then(res => res.json())\n        });\n\n        yield put({ type: 'PLANETS_PAGE_FETCHED', autocompletePlanets: data.results })\n        data.next ? url = data.next : isAnotherPageAvailable = false;\n      }\n      yield put({ type: 'ALL_PLANETS_FETCHED' })\n      isFetching = false;\n    }\n  } catch(e) {\n      yield put({ type: 'PLANET_FETCH_ERRORED', e })\n  } finally {\n    if (yield cancelled()) {\n      yield put({ type: 'PLANET_FETCH_ABORTED' })\n    }\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchFetchPlanets(),\n    watchInput()\n  ])\n}","import { createStore, applyMiddleware } from \"redux\";\nimport { initialState, SearchBoxComponent } from \"./reducers\";\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// TODO: make logger enabled development-only\nexport default createStore(SearchBoxComponent, initialState, applyMiddleware(sagaMiddleware, logger));\n\nsagaMiddleware.run(rootSaga);\n","export const inputChange = searchInputValue => ({\n  type: 'INPUT_CHANGE',\n  searchInputValue\n})\n\nexport const inputClear = () => ({\n  type: 'INPUT_CLEARED',\n})\n\nexport const popupOutsideClick = () => ({\n  type: 'POPUP_OUTSIDE_CLICKED',\n})\n\nexport const pushAutocompleteRef = (ref) => ({\n  type: 'INPUT_REF_CREATED',\n  ref\n})\n\nexport const setAutocompleteOption = (option) => ({\n  type: 'AUTOCOMPLETE_OPTION_CLICKED',\n  option\n})","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { inputChange, inputClear, pushAutocompleteRef } from \"../utils/actions\";\n\nclass SearchInput extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      active: true\n    };\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n    this.props.pushAutocompleteRef(this.inputRef.current.getBoundingClientRect());\n    window.a = this.inputRef.current;\n  }\n\n  handleInput = (event) => {\n    event.target.value ? this.props.inputChange(event.target.value) : this.props.inputChange('');\n  }\n\n  handleClick = (event) => {\n    this.props.inputClear();\n    this.inputRef.current.focus();\n  }\n\n  render() {\n    const INPUT_NAME = 'Star Wars Planets'\n    const isTouched = this.state.active || this.props.searchInputValue;\n    \n    return (\n      <div className={`field ${isTouched ? 'active' : ''}`}>\n      \n        <input ref={this.inputRef}\n          type=\"text\" \n          id=\"searchInput\"\n          value={this.props.searchInputValue}\n          onChange={this.handleInput}\n          onFocus={() => this.setState({ active: true })}\n          onBlur={() => this.setState({ active: false })}\n          placeholder={this.state.active ? '' : INPUT_NAME} />\n        {/*this.props.searchInputValue && <button type=\"button\" onClick={this.handleClick}>Stop!</button>*/}\n        <label htmlFor=\"searchInput\">{INPUT_NAME}</label>\n        {this.props.searchInputValue && <button onClick={this.handleClick} className=\"close\"/>}\n        {this.props.isFetching && <div className=\"spinner\"></div>}\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n  return {\n    searchInputValue: state.searchInputValue,\n    isFetching: state.isFetching,\n  }\n}\n\nconst mapDispatchToProps = { inputChange, inputClear, pushAutocompleteRef };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchInput);\n","import React from 'react';\n\nfunction PopupListView(props) {\n\n  let highlightResults = (word, searchQuery) => {\n    // We assume that search should be case insensitive\n    let searchIndex = word.toLowerCase().indexOf(searchQuery.toLowerCase());\n    let wordParts = {\n      first: word.slice(0, searchIndex),\n      second: word.slice(searchIndex, searchIndex + searchQuery.length),\n      third: word.slice(searchIndex + searchQuery.length, )\n    }\n\n    return (\n      <React.Fragment>\n        <span>{wordParts.first}</span>\n        <b>{wordParts.second}</b>\n        <span>{wordParts.third}</span>\n      </React.Fragment>\n    )\n  }\n\n  const SWAPI_MAGIC_NUMBER = 29;\n\n    // Silly error handling, just placeholder for future\n  if (props.planetList[0] === 'Error') {\n    return <ul><li>Something went wrong</li></ul>\n\n  }\n   else if (props.isFetching) {\n      return null\n\n  } else if (props.planetList.length === 0) {\n      return (<ul><li>No results</li></ul>)\n  }\n\n  return (\n      <ul className=\"popupList\">{props.planetList.map(item => \n          // This is dirty way to get index of a planet in swapi DB, since that's the only place\n          // where they send it. But we still can use it and create a url for certain planet for future. \n          <li key={item.url.slice(SWAPI_MAGIC_NUMBER,-1)}\n              onClick={()=> props.clickHandler(item.name)}>\n              {highlightResults(item.name, props.inputValue)}\n          </li>\n        )}\n      </ul>\n  )\n}\n\nexport default PopupListView","import React, { useRef, useEffect } from \"react\";\n\n// TODO Add mobile handlers, touchstart event probably \nfunction useClickOutsideHandler(ref, handler, keyCodes) {\n\n  function handleKeyPress(event) {\n\n    if (keyCodes.includes(event.keyCode)) {\n      handler();\n    }\n  }\n\n\n  function handleClick(event) {\n\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n      document.removeEventListener(\"keydown\", handleKeyPress);\n\n    };\n  });\n}\n\nexport default function ClickOutsideHandler(props) {\n  const wrapperRef = useRef(null);\n  useClickOutsideHandler(wrapperRef, props.outsideClickLogic, props.keyCodes);\n\n  return <div className={props.className} style={props.style} ref={wrapperRef}>{props.children}</div>;\n}","import React, { PureComponent } from 'react';\nimport { connect } from \"react-redux\";\nimport { inputChange, popupOutsideClick, setAutocompleteOption } from \"../utils/actions\";\nimport PopupListView from \"./PopupListView\";\nimport ClickOutsideHandler from './hocs/clickOutsideHandler';\n\nclass PopupList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.ESCAPE_KEY_CODE = 27;\n  }\n\n  setInputText = (text) => {\n    this.props.setAutocompleteOption(text);\n  }\n\n  calculatePosition() {\n    let styleObj = {\n      top: `${this.props.inputRef.bottom}px`,\n      left: `${this.props.inputRef.left}px`\n    }\n    return styleObj\n  }\n\n  render() {\n\n    if (!this.props.isOpen || !this.props.searchInputValue) {\n      return null\n    }\n\n    let calculatePosition = () => {\n      let styleObj = {\n        top: `${this.props.inputRef.bottom}px`,\n        left: `${this.props.inputRef.left}px`,\n        width: `${this.props.inputRef.width}px`,\n      }\n      return styleObj\n    }\n\n    return (\n      <ClickOutsideHandler\n        className=\"listContainer\"\n        style={calculatePosition()}\n        outsideClickLogic={this.props.popupOutsideClick}\n        keyCodes={[this.ESCAPE_KEY_CODE]}>\n        <PopupListView\n          planetList={this.props.autocompletePlanets}\n          clickHandler={this.props.setAutocompleteOption}\n          inputValue = {this.props.searchInputValue}\n          isFetching = {this.props.isFetching}\n          isOpen= {this.props.isOpen} />\n      </ClickOutsideHandler>\n      )\n  }\n}\n\nconst mapStateToProps = (state /*, ownProps*/ ) => {\n  return {\n    autocompletePlanets: state.autocompletePlanets,\n    searchInputValue: state.searchInputValue,\n    isFetching: state.isFetching,\n    isOpen: state.isAutocompleteListOpen,\n    inputRef: state.inputRef,\n  }\n}\n\nconst mapDispatchToProps = { inputChange, popupOutsideClick, setAutocompleteOption };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PopupList);","import React, { Component, Suspense } from 'react';\nimport SearchInput from './SearchInput';\nimport PopupList from './PopupList';\n\nclass SearchBox extends Component {\n  render() {\n    return (\n      <React.StrictMode>\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <form className=\"SearchBox\" action=\"javascript:;\" autoComplete=\"off\">\n            <SearchInput />\n            <PopupList />\n          </form>\n        </Suspense>\n      </React.StrictMode>\n    );\n  }\n}\n\nexport default SearchBox;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from \"./utils/store\";\nimport \"./App.scss\";\nimport SearchBox from './components/SearchBox.js';\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n\t\t<SearchBox />\n  </Provider>, document.getElementById('root')\n);"],"sourceRoot":""}