{"version":3,"sources":["utils/reducers.js","utils/sagas.js","utils/store.js","utils/actions.js","components/SearchInput.js","components/PopupListView.js","components/hocs/clickOutsideHandler.js","components/PopupList.js","components/SearchBox.js","index.js"],"names":["initialState","inputRef","autocompletePlanets","searchInputValue","isFetching","isAutocompleteListOpen","watchFetchPlanets","watchInput","fetchPlanets","rootSaga","action","task","regenerator_default","a","wrap","_context","prev","next","take","sent","payload","trim","fork","cancel","put","type","stop","_marked","_context2","_marked2","_loop","_ret","_context4","mark","url","isAnotherPageAvailable","data","_context3","abrupt","v","delay","concat","call","fetch","then","res","json","results","delegateYield","t0","t1","e","cancelled","finish","_marked3","_context5","all","_marked4","sagaMiddleware","createSagaMiddleware","createStore","state","arguments","length","undefined","Object","objectSpread","toConsumableArray","applyMiddleware","run","inputChange","SearchInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","handleInput","event","target","value","handleClick","inputClear","current","focus","React","createRef","active","pushAutocompleteRef","getBoundingClientRect","window","_this2","isTouched","react_default","createElement","className","ref","id","onChange","onFocus","setState","onBlur","placeholder","htmlFor","onClick","Component","mapDispatchToProps","connect","PopupListView","planetList","map","item","key","slice","clickHandler","name","word","searchQuery","searchIndex","toLowerCase","indexOf","wordParts","first","second","third","Fragment","highlightResults","inputValue","ClickOutsideHandler","wrapperRef","useRef","handler","keyCodes","handleKeyPress","includes","keyCode","contains","useEffect","document","addEventListener","removeEventListener","useClickOutsideHandler","outsideClickLogic","style","children","PopupList","setInputText","text","setAutocompleteOption","ESCAPE_KEY_CODE","top","bottom","left","isOpen","width","popupOutsideClick","components_PopupListView","PureComponent","SearchBox","StrictMode","react","fallback","autoComplete","components_SearchInput","components_PopupList","ReactDOM","render","es","store","components_SearchBox","getElementById"],"mappings":"oNAEaA,EAAe,CAC1BC,SAAU,GACVC,oBAAqB,GACrBC,iBAAkB,GAClBC,YAAY,EACZC,wBAAwB,uDCLhBC,cAaAC,cAOAC,cAqCeC,GAzDzB,SAAUH,IAAV,IAAAI,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEmB,OAFnBF,EAAAE,KAAA,EAEyBC,YAAK,iBAF9B,YAEUR,EAFVK,EAAAI,MAGeC,QAAQC,OAHvB,CAAAN,EAAAE,KAAA,SAImB,OAJnBF,EAAAE,KAAA,EAIyBK,YAAKd,EAAcE,GAJ5C,OAKM,OADMC,EAJZI,EAAAI,KAAAJ,EAAAE,KAAA,GAKYC,YAAK,CAAC,gBAAiB,eAAgB,0BALnD,QAMM,OANNH,EAAAE,KAAA,GAMYM,YAAOZ,GANnB,QAAAI,EAAAE,KAAA,iBAQM,OARNF,EAAAE,KAAA,GAQYO,YAAI,CAAEC,KAAM,gBARxB,QAAAV,EAAAE,KAAA,iCAAAF,EAAAW,SAAAC,GAaA,SAAUpB,IAAV,IAAAG,EAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAEmB,OAFnBW,EAAAX,KAAA,EAEyBC,YAAK,gBAF9B,OAGI,OADMR,EAFVkB,EAAAT,KAAAS,EAAAX,KAAA,EAGUO,YAAI,CAAEC,KAAM,gBAAiBL,QAASV,EAAOU,UAHvD,OAAAQ,EAAAX,KAAA,gCAAAW,EAAAF,SAAAG,GAOA,SAAUrB,EAAaE,GAAvB,IAAAN,EAAA0B,EAAAC,EAAA,OAAAnB,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAAAe,EAAAhB,KAAA,EAEQZ,GAAa,EAFrB0B,EAAAlB,EAAAC,EAAAoB,KAAA,SAAAH,IAAA,IAAAI,EAAAC,EAAAC,EAAA,OAAAxB,EAAAC,EAAAC,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAKWP,EAAOU,QALlB,CAAAiB,EAAApB,KAAA,eAAAoB,EAAAC,OAAA,UAAAC,OAAA,WAQM,OARNF,EAAApB,KAAA,EAQYuB,YAAM,KARlB,OAUUN,EAVV,wCAAAO,OAUwD/B,EAAOU,QAAQC,QAC/Dc,GAAyB,EAXjC,WAcaA,EAdb,CAAAE,EAAApB,KAAA,SAeQ,OAfRoB,EAAApB,KAAA,EAecO,YAAI,CAAEC,KAAM,6BAf1B,OAiBqB,OAjBrBY,EAAApB,KAAA,GAiB2ByB,YAAK,WACtB,OAAOC,MAAMT,GACVU,KAAK,SAAAC,GAAG,OAAIA,EAAIC,WAnB7B,QAsBQ,OALMV,EAjBdC,EAAAlB,KAAAkB,EAAApB,KAAA,GAsBcO,YAAI,CAAEC,KAAM,uBAAwBL,QAASgB,EAAKW,UAtBhE,QAuBQX,EAAKnB,KAAOiB,EAAME,EAAKnB,KAAOkB,GAAyB,EAvB/DE,EAAApB,KAAA,gBAyBM,OAzBNoB,EAAApB,KAAA,GAyBYO,YAAI,CAAEC,KAAM,wBAzBxB,QA0BMrB,GAAa,EA1BnB,yBAAAiC,EAAAX,SAAAI,KAAA,WAGW1B,EAHX,CAAA4B,EAAAf,KAAA,gBAAAe,EAAAgB,cAAAlB,IAAA,oCAAAC,EAAAC,EAAAiB,IAAA,CAAAjB,EAAAf,KAAA,eAAAe,EAAAM,OAAA,SAAAP,EAAAQ,GAAA,OAAAP,EAAAf,KAAA,gBAAAe,EAAAf,KAAA,iBA6BM,OA7BNe,EAAAhB,KAAA,GAAAgB,EAAAkB,GAAAlB,EAAA,SAAAA,EAAAf,KAAA,GA6BYO,YAAI,CAAEC,KAAM,uBAAwB0B,EAACnB,EAAAkB,KA7BjD,QA+BQ,OA/BRlB,EAAAhB,KAAA,GAAAgB,EAAAf,KAAA,GA+BcmC,cA/Bd,YAAApB,EAAAb,KAAA,CAAAa,EAAAf,KAAA,SAgCM,OAhCNe,EAAAf,KAAA,GAgCYO,YAAI,CAAEC,KAAM,yBAhCxB,eAAAO,EAAAqB,OAAA,6BAAArB,EAAAN,SAAA4B,EAAA,qBAqCe,SAAU7C,IAAV,OAAAG,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACb,OADasC,EAAAtC,KAAA,EACPuC,YAAI,CACRlD,IACAC,MAHW,wBAAAgD,EAAA7B,SAAA+B,GCrDf,IAAMC,EAAiBC,cAGRC,cFCR,WAA0D,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB9D,EAAcU,EAAQoD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/D,OAAQtD,EAAOe,MAEb,IAAK,gBACH,OAAOwC,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACE1D,iBAAkBO,EAAOU,QACzBhB,YAAY,EACZF,oBAAqB,KAGzB,IAAK,cACH,OAAO+D,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACEzD,YAAY,IAGhB,IAAK,gBACH,OAAO6D,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACE1D,iBAAkB,KAGtB,IAAK,wBACH,OAAO8D,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACExD,wBAAwB,IAG5B,IAAK,2BACH,OAAO4D,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACExD,wBAAwB,IAG5B,IAAK,uBACH,OAAO4D,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACE3D,oBAAmB,GAAAuC,OAAAwB,OAAAE,EAAA,EAAAF,CAAMJ,EAAM3D,qBAAZ+D,OAAAE,EAAA,EAAAF,CAAqCvD,EAAOU,YAGnE,IAAK,sBACH,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACEzD,YAAY,EACZC,wBAAwB,IAG5B,IAAK,uBACH,OAAO4D,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACEzD,YAAY,EACZF,oBAAqB,KAGzB,IAAK,uBACH,OAAO+D,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACEzD,YAAY,EACZF,oBAAqB,CAAC,WAG1B,IAAK,oBACH,OAAO+D,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACE5D,SAAUS,EAAOU,UAGrB,IAAK,8BACH,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CACE1D,iBAAkBO,EAAOU,QACzBlB,oBAAqB,GACrBG,wBAAwB,IAG5B,QACE,OAAOwD,IEnEkC7D,EAAcoE,YAAgBV,IAE7EA,EAAeW,IAAI5D,6DCXN6D,EAAc,SAAAlD,GAAO,MAAK,CACrCK,KAAM,eACNL,YCIImD,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAJ,IACjBE,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAAM,GAAA7B,KAAAiC,KAAMH,KAkBRM,YAAc,SAACC,GACbA,EAAMC,OAAOC,MAAQR,EAAKD,MAAMF,YAAYS,EAAMC,OAAOC,OAASR,EAAKD,MAAMF,YAAY,KApBxEG,EAuBnBS,YAAc,SAACH,GACbN,EAAKD,MAAMW,aACXV,EAAKxE,SAASmF,QAAQC,SAvBtBZ,EAAKxE,SAAWqF,IAAMC,YACtBd,EAAKZ,MAAQ,CACX2B,QAAQ,GAJOf,mFAcjBE,KAAK1E,SAASmF,QAAQC,QACtBV,KAAKH,MAAMiB,oBAAoBd,KAAK1E,SAASmF,QAAQM,yBACrDC,OAAO9E,EAAI8D,KAAK1E,SAASmF,yCAYlB,IAAAQ,EAAAjB,KAEDkB,EAAYlB,KAAKd,MAAM2B,QAAUb,KAAKH,MAAMrE,iBAElD,OACE2F,EAAAjF,EAAAkF,cAAA,OAAKC,UAAS,SAAAvD,OAAWoD,EAAY,SAAW,KAE9CC,EAAAjF,EAAAkF,cAAA,SAAOE,IAAKtB,KAAK1E,SACfwB,KAAK,OACLyE,GAAG,cACHjB,MAAON,KAAKH,MAAMrE,iBAClBgG,SAAUxB,KAAKG,YACfsB,QAAS,kBAAMR,EAAKS,SAAS,CAAEb,QAAQ,KACvCc,OAAQ,kBAAMV,EAAKS,SAAS,CAAEb,QAAQ,KACtCe,YAAa5B,KAAKd,MAAM2B,OAAS,GAbpB,sBAcfM,EAAAjF,EAAAkF,cAAA,SAAOS,QAAQ,eAdA,qBAed7B,KAAKH,MAAMrE,kBAAoB2F,EAAAjF,EAAAkF,cAAA,UAAQU,QAAS9B,KAAKO,YAAac,UAAU,UAC5ErB,KAAKH,MAAMpE,YAAc0F,EAAAjF,EAAAkF,cAAA,OAAKC,UAAU,oBA9CvBU,aA4DpBC,EAAqB,CAAErC,cAAaa,WD7DhB,iBAAO,CAC/B1D,KAAM,kBC4D8CgE,oBDrDnB,SAACrE,GAAD,MAAc,CAC/CK,KAAM,oBACNL,aCqDawF,cATS,SAAC/C,GACvB,MAAO,CACL1D,iBAAkB0D,EAAM1D,iBACxBC,WAAYyD,EAAMzD,aAQpBuG,EAFaC,CAGbrC,GCtBasC,MA/Cf,SAAuBrC,GAuBrB,MAA4B,UAAxBA,EAAMsC,WAAW,GACZhB,EAAAjF,EAAAkF,cAAA,UAAID,EAAAjF,EAAAkF,cAAA,mCAGHvB,EAAMpE,WACL,KAE4B,IAA5BoE,EAAMsC,WAAW/C,OAChB+B,EAAAjF,EAAAkF,cAAA,UAAID,EAAAjF,EAAAkF,cAAA,yBAIZD,EAAAjF,EAAAkF,cAAA,MAAIC,UAAU,aAAaxB,EAAMsC,WAAWC,IAAI,SAAAC,GAAI,OAGhDlB,EAAAjF,EAAAkF,cAAA,MAAIkB,IAAKD,EAAK9E,IAAIgF,MAlBC,IAkByB,GACxCT,QAAS,kBAAKjC,EAAM2C,aAAaH,EAAKI,QArC3B,SAACC,EAAMC,GAE5B,IAAIC,EAAcF,EAAKG,cAAcC,QAAQH,EAAYE,eACrDE,EAAY,CACdC,MAAON,EAAKH,MAAM,EAAGK,GACrBK,OAAQP,EAAKH,MAAMK,EAAaA,EAAcD,EAAYvD,QAC1D8D,MAAOR,EAAKH,MAAMK,EAAcD,EAAYvD,SAG9C,OACE+B,EAAAjF,EAAAkF,cAACD,EAAAjF,EAAMiH,SAAP,KACEhC,EAAAjF,EAAAkF,cAAA,YAAO2B,EAAUC,OACjB7B,EAAAjF,EAAAkF,cAAA,SAAI2B,EAAUE,QACd9B,EAAAjF,EAAAkF,cAAA,YAAO2B,EAAUG,QAyBVE,CAAiBf,EAAKI,KAAM5C,EAAMwD,iBCXlC,SAASC,EAAoBzD,GAC1C,IAAM0D,EAAaC,iBAAO,MAG1B,OAhCF,SAAgClC,EAAKmC,EAASC,GAE5C,SAASC,EAAevD,GAElBsD,EAASE,SAASxD,EAAMyD,UAC1BJ,IAKJ,SAASlD,EAAYH,GAEfkB,EAAIb,UAAYa,EAAIb,QAAQqD,SAAS1D,EAAMC,SAC7CoD,IAIJM,oBAAU,WAGR,OAFAC,SAASC,iBAAiB,YAAa1D,GACvCyD,SAASC,iBAAiB,UAAWN,GAC9B,WACLK,SAASE,oBAAoB,YAAa3D,GAC1CyD,SAASE,oBAAoB,UAAWP,MAQ5CQ,CAAuBZ,EAAY1D,EAAMuE,kBAAmBvE,EAAM6D,UAE3DvC,EAAAjF,EAAAkF,cAAA,OAAKC,UAAWxB,EAAMwB,UAAWgD,MAAOxE,EAAMwE,MAAO/C,IAAKiC,GAAa1D,EAAMyE,cC3BhFC,cACJ,SAAAA,EAAY1E,GAAO,IAAAC,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAuE,IACjBzE,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAAiF,GAAAxG,KAAAiC,KAAMH,KAgBR2E,aAAe,SAACC,GACd3E,EAAKD,MAAM6E,sBAAsBD,IAhBjC3E,EAAK6E,gBAAkB,GAFN7E,mFA0BjB,MAJe,CACb8E,IAAG,GAAA9G,OAAKkC,KAAKH,MAAMvE,SAASuJ,OAAzB,MACHC,KAAI,GAAAhH,OAAKkC,KAAKH,MAAMvE,SAASwJ,KAAzB,wCAKC,IAAA7D,EAAAjB,KAEP,IAAKA,KAAKH,MAAMkF,SAAW/E,KAAKH,MAAMrE,iBACpC,OAAO,KAYT,OACE2F,EAAAjF,EAAAkF,cAACkC,EAAD,CACEjC,UAAU,gBACVgD,MAXa,CACbO,IAAG,GAAA9G,OAAKmD,EAAKpB,MAAMvE,SAASuJ,OAAzB,MACHC,KAAI,GAAAhH,OAAKmD,EAAKpB,MAAMvE,SAASwJ,KAAzB,MACJE,MAAK,GAAAlH,OAAKmD,EAAKpB,MAAMvE,SAAS0J,MAAzB,OASLZ,kBAAmBpE,KAAKH,MAAMoF,kBAC9BvB,SAAU,CAAC1D,KAAK2E,kBAChBxD,EAAAjF,EAAAkF,cAAC8D,EAAD,CACE/C,WAAYnC,KAAKH,MAAMtE,oBACvBiH,aAAcxC,KAAKH,MAAM6E,sBACzBrB,WAAcrD,KAAKH,MAAMrE,iBACzBC,WAAcuE,KAAKH,MAAMpE,WACzBsJ,OAAS/E,KAAKH,MAAMkF,iBAxDNI,iBAwElBnD,EAAqB,CAAErC,cAAasF,kBJvET,iBAAO,CACtCnI,KAAM,0BIsEqD4H,sBJ9DxB,SAACjI,GAAD,MAAc,CACjDK,KAAM,8BACNL,aI8DawF,cAZS,SAAC/C,GACvB,MAAO,CACL3D,oBAAqB2D,EAAM3D,oBAC3BC,iBAAkB0D,EAAM1D,iBACxBC,WAAYyD,EAAMzD,WAClBsJ,OAAQ7F,EAAMxD,uBACdJ,SAAU4D,EAAM5D,WAQlB0G,EAFaC,CAGbsC,GClEaa,mLAbX,OACEjE,EAAAjF,EAAAkF,cAACD,EAAAjF,EAAMmJ,WAAP,KACElE,EAAAjF,EAAAkF,cAACkE,EAAA,SAAD,CAAUC,SAAUpE,EAAAjF,EAAAkF,cAAA,yBAClBD,EAAAjF,EAAAkF,cAAA,QAAMC,UAAU,YAAYtF,OAAO,eAAeyJ,aAAa,OAC7DrE,EAAAjF,EAAAkF,cAACqE,EAAD,MACAtE,EAAAjF,EAAAkF,cAACsE,EAAD,gBAPY3D,aCGxB4D,IAASC,OACPzE,EAAAjF,EAAAkF,cAACyE,EAAA,EAAD,CAAUC,MAAOA,GACjB3E,EAAAjF,EAAAkF,cAAC2E,EAAD,OACa/B,SAASgC,eAAe","file":"static/js/main.f2aaa502.chunk.js","sourcesContent":["//import { combineReducers } from \"redux\";\n\nexport const initialState = {\n  inputRef: {},\n  autocompletePlanets: [],\n  searchInputValue: '',\n  isFetching: false,\n  isAutocompleteListOpen: false\n};\n\nexport function SearchBoxComponent(state = initialState, action) {\n  switch (action.type) {\n\n    case 'INPUT_CHANGED':\n      return { ...state,\n        searchInputValue: action.payload,\n        isFetching: true,\n        autocompletePlanets: [],\n      }\n\n    case 'INPUT_EMPTY':\n      return { ...state,\n        isFetching: false,\n      }\n\n    case 'INPUT_CLEARED':\n      return { ...state,\n        searchInputValue: '',\n      }\n\n    case 'POPUP_OUTSIDE_CLICKED':\n      return { ...state,\n        isAutocompleteListOpen: false,\n      }\n\n    case 'PLANETS_PAGE_FETCH_START':\n      return { ...state,\n        isAutocompleteListOpen: true,\n      }\n\n    case 'PLANETS_PAGE_FETCHED':\n      return { ...state,\n        autocompletePlanets: [...state.autocompletePlanets,  ...action.payload]\n      }\n\n    case 'ALL_PLANETS_FETCHED':\n      return { ...state,\n        isFetching: false,\n        isAutocompleteListOpen: true\n      }\n\n    case 'PLANET_FETCH_ABORTED':\n      return { ...state,\n        isFetching: false,\n        autocompletePlanets: [],\n      }\n\n    case 'PLANET_FETCH_ERRORED':\n      return { ...state,\n        isFetching: false,\n        autocompletePlanets: ['Error'],\n      }\n\n    case 'INPUT_REF_CREATED':\n      return { ...state,\n        inputRef: action.payload,\n      }\n\n    case 'AUTOCOMPLETE_OPTION_CLICKED':\n      return { ...state,\n        searchInputValue: action.payload,\n        autocompletePlanets: [],\n        isAutocompleteListOpen: false,\n      }\n      \n    default: \n      return state\n  }\n}\n\n","import { put, take, all, delay, fork, call, cancel, cancelled } from 'redux-saga/effects'\n\nfunction* watchFetchPlanets() {\n  while (true) {\n    const action = yield take('INPUT_CHANGED');\n    if (action.payload.trim()) {\n      const task = yield fork(fetchPlanets, action);\n      yield take(['INPUT_CLEARED', 'INPUT_CHANGE', 'POPUP_OUTSIDE_CLICKED']);\n      yield cancel(task);  \n    } else {\n      yield put({ type: 'INPUT_EMPTY' });\n    }\n  }\n}\n\nfunction* watchInput() {\n  while (true) {\n    const action = yield take('INPUT_CHANGE');\n    yield put({ type: 'INPUT_CHANGED', payload: action.payload });\n  }\n}\n\nfunction* fetchPlanets(action) {\n  try {\n    let isFetching = true\n    while (isFetching) {\n      // If input is empty\n      if (!action.payload) return\n\n      // Debouncing, this works fine, no need for for debounce saga effect\n      yield delay(400);\n\n      let url = `https://swapi.co/api/planets/?search=${action.payload.trim()}`,\n        isAnotherPageAvailable = true;\n\n      // Workaround due swapi lack of get /all planets endpoint\n      while (isAnotherPageAvailable) {\n        yield put({ type: 'PLANETS_PAGE_FETCH_START' })\n\n        const data = yield call(() => {\n          return fetch(url)\n            .then(res => res.json())\n        });\n\n        yield put({ type: 'PLANETS_PAGE_FETCHED', payload: data.results })\n        data.next ? url = data.next : isAnotherPageAvailable = false;\n      }\n      yield put({ type: 'ALL_PLANETS_FETCHED' })\n      isFetching = false;\n    }\n  } catch(e) {\n      yield put({ type: 'PLANET_FETCH_ERRORED', e })\n  } finally {\n    if (yield cancelled()) {\n      yield put({ type: 'PLANET_FETCH_ABORTED' })\n    }\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchFetchPlanets(),\n    watchInput()\n  ])\n}","import { createStore, applyMiddleware } from 'redux';\nimport { initialState, SearchBoxComponent } from './reducers';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// TODO: make logger enabled development-only\nexport default createStore(SearchBoxComponent, initialState, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n","export const inputChange = payload => ({\n  type: 'INPUT_CHANGE',\n  payload\n})\n\nexport const inputClear = () => ({\n  type: 'INPUT_CLEARED',\n})\n\nexport const popupOutsideClick = () => ({\n  type: 'POPUP_OUTSIDE_CLICKED',\n})\n\nexport const pushAutocompleteRef = (payload) => ({\n  type: 'INPUT_REF_CREATED',\n  payload\n})\n\nexport const setAutocompleteOption = (payload) => ({\n  type: 'AUTOCOMPLETE_OPTION_CLICKED',\n  payload\n})","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { inputChange, inputClear, pushAutocompleteRef } from '../utils/actions';\n\nclass SearchInput extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      active: true\n    };\n  }\n\n  static propTypes = {\n    searchInputValue: PropTypes.string,\n    isFetching: PropTypes.bool,\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n    this.props.pushAutocompleteRef(this.inputRef.current.getBoundingClientRect());\n    window.a = this.inputRef.current;\n  }\n\n  handleInput = (event) => {\n    event.target.value ? this.props.inputChange(event.target.value) : this.props.inputChange('');\n  }\n\n  handleClick = (event) => {\n    this.props.inputClear();\n    this.inputRef.current.focus();\n  }\n\n  render() {\n    const INPUT_NAME = 'Star Wars Planets'\n    const isTouched = this.state.active || this.props.searchInputValue;\n    \n    return (\n      <div className={`field ${isTouched ? 'active' : ''}`}>\n      \n        <input ref={this.inputRef}\n          type='text' \n          id='searchInput'\n          value={this.props.searchInputValue}\n          onChange={this.handleInput}\n          onFocus={() => this.setState({ active: true })}\n          onBlur={() => this.setState({ active: false })}\n          placeholder={this.state.active ? '' : INPUT_NAME} />\n        <label htmlFor='searchInput'>{INPUT_NAME}</label>\n        {this.props.searchInputValue && <button onClick={this.handleClick} className='close'/>}\n        {this.props.isFetching && <div className='spinner'></div>}\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n  return {\n    searchInputValue: state.searchInputValue,\n    isFetching: state.isFetching,\n  }\n}\n\nconst mapDispatchToProps = { inputChange, inputClear, pushAutocompleteRef };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchInput);\n","import React from 'react';\n\nfunction PopupListView(props) {\n\n  let highlightResults = (word, searchQuery) => {\n    // We assume that search should be case insensitive\n    let searchIndex = word.toLowerCase().indexOf(searchQuery.toLowerCase());\n    let wordParts = {\n      first: word.slice(0, searchIndex),\n      second: word.slice(searchIndex, searchIndex + searchQuery.length),\n      third: word.slice(searchIndex + searchQuery.length, )\n    }\n\n    return (\n      <React.Fragment>\n        <span>{wordParts.first}</span>\n        <b>{wordParts.second}</b>\n        <span>{wordParts.third}</span>\n      </React.Fragment>\n    )\n  }\n\n  const SWAPI_MAGIC_NUMBER = 29;\n\n    // Silly error handling, just placeholder for future\n  if (props.planetList[0] === 'Error') {\n    return <ul><li>Something went wrong</li></ul>\n\n  }\n   else if (props.isFetching) {\n      return null\n\n  } else if (props.planetList.length === 0) {\n      return (<ul><li>No results</li></ul>)\n  }\n\n  return (\n      <ul className='popupList'>{props.planetList.map(item => \n          // This is dirty way to get index of a planet in swapi DB, since that's the only place\n          // where they send it. But we still can use it and create a url for certain planet for future. \n          <li key={item.url.slice(SWAPI_MAGIC_NUMBER,-1)}\n              onClick={()=> props.clickHandler(item.name)}>\n              {highlightResults(item.name, props.inputValue)}\n          </li>\n        )}\n      </ul>\n  )\n}\n\nexport default PopupListView","import React, { useRef, useEffect } from 'react';\n\n// TODO Add mobile handlers, touchstart event probably \nfunction useClickOutsideHandler(ref, handler, keyCodes) {\n\n  function handleKeyPress(event) {\n\n    if (keyCodes.includes(event.keyCode)) {\n      handler();\n    }\n  }\n\n\n  function handleClick(event) {\n\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n      document.removeEventListener('keydown', handleKeyPress);\n\n    };\n  });\n}\n\nexport default function ClickOutsideHandler(props) {\n  const wrapperRef = useRef(null);\n  useClickOutsideHandler(wrapperRef, props.outsideClickLogic, props.keyCodes);\n\n  return <div className={props.className} style={props.style} ref={wrapperRef}>{props.children}</div>;\n}","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { inputChange, popupOutsideClick, setAutocompleteOption } from '../utils/actions';\nimport PopupListView from './PopupListView';\nimport ClickOutsideHandler from './hocs/clickOutsideHandler';\n\nclass PopupList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.ESCAPE_KEY_CODE = 27;\n  }\n\n  static propTypes = {\n    searchInputValue: PropTypes.string,\n    isFetching: PropTypes.bool,\n    autocompletePlanets: PropTypes.array,\n    isOpen: PropTypes.bool,\n    inputRef: PropTypes.shape({\n      bottom: PropTypes.number,\n      left: PropTypes.number,\n      width: PropTypes.number,\n    })\n  }\n\n  setInputText = (text) => {\n    this.props.setAutocompleteOption(text);\n  }\n\n  calculatePosition() {\n    let styleObj = {\n      top: `${this.props.inputRef.bottom}px`,\n      left: `${this.props.inputRef.left}px`\n    }\n    return styleObj\n  }\n\n  render() {\n\n    if (!this.props.isOpen || !this.props.searchInputValue) {\n      return null\n    }\n\n    let calculatePosition = () => {\n      let styleObj = {\n        top: `${this.props.inputRef.bottom}px`,\n        left: `${this.props.inputRef.left}px`,\n        width: `${this.props.inputRef.width}px`,\n      }\n      return styleObj\n    }\n\n    return (\n      <ClickOutsideHandler\n        className='listContainer'\n        style={calculatePosition()}\n        outsideClickLogic={this.props.popupOutsideClick}\n        keyCodes={[this.ESCAPE_KEY_CODE]}>\n        <PopupListView\n          planetList={this.props.autocompletePlanets}\n          clickHandler={this.props.setAutocompleteOption}\n          inputValue = {this.props.searchInputValue}\n          isFetching = {this.props.isFetching}\n          isOpen= {this.props.isOpen} />\n      </ClickOutsideHandler>\n      )\n  }\n}\n\nconst mapStateToProps = (state /*, ownProps*/ ) => {\n  return {\n    autocompletePlanets: state.autocompletePlanets,\n    searchInputValue: state.searchInputValue,\n    isFetching: state.isFetching,\n    isOpen: state.isAutocompleteListOpen,\n    inputRef: state.inputRef,\n  }\n}\n\nconst mapDispatchToProps = { inputChange, popupOutsideClick, setAutocompleteOption };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PopupList);","import React, { Component, Suspense } from 'react';\nimport SearchInput from './SearchInput';\nimport PopupList from './PopupList';\n\nclass SearchBox extends Component {\n  render() {\n    return (\n      <React.StrictMode>\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <form className='SearchBox' action='javascript:;' autoComplete='off'>\n            <SearchInput />\n            <PopupList />\n          </form>\n        </Suspense>\n      </React.StrictMode>\n    );\n  }\n}\n\nexport default SearchBox;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from \"./utils/store\";\nimport \"./App.scss\";\nimport SearchBox from './components/SearchBox.js';\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n\t\t<SearchBox />\n  </Provider>, document.getElementById('root')\n);"],"sourceRoot":""}